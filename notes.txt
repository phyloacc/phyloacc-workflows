subir's scripts: https://github.com/subirshakya/phast_scripts/blob/main/run_phast.sh
tim's scripts:  https://github.com/tsackton/ratite-genomics/blob/69461bbafa772a25e84feb283b4fbc8397838fed/04_wga/02_ce_id/run_phast.sh#L223
zoonomia docs: https://github.com/ComparativeGenomicsToolkit/zoonomia-hub/blob/185997c8f95d23f41d7232b055f91f236650f9d4/documentation/200mAlignment.html

phyloacc:
/n/holylfs05/LABS/informatics/Users/gthomas/phyloacc-workflows/data/01-zoonomia-aln/02-phylofit/241-mammalian-2020v2b-corrected.mod
/n/holylfs05/LABS/informatics/Users/gthomas/phyloacc-workflows/data/01-zoonomia-aln/08-conserved-elements-chr-fasta/chr1/80-40-dedup-241/

"Dasypus_novemcinctus;Tolypeutes_matacus;Chaetophractus_vellerosus;Tamandua_tetradactyla;Myrmecophaga_tridactyla;Choloepus_didactylus;Choloepus_hoffmanni;Trichechus_manatus;Procavia_capensis;Heterohyrax_brucei;Loxodonta_africana;Microgale_talazaci;Echinops_telfairi;Chrysochloris_asiatica;Elephantulus_edwardii;Orycteropus_afer"

fullTreeAnc167 (toothed whales)
fullTreeAnc125 (echolocating yinpterochiroptera)
fullTreeAnc149 (yangochiroptera)

/n/home07/gthomas/projects/phyloacc/PhyloAcc/PhyloAcc-ST

python ~/projects/phyloacc/PhyloAcc/src/PhyloAcc-interface/phyloacc.py -d /n/holylfs05/LABS/informatics/Users/gthomas/phyloacc-workflows/data/01-zoonomia-aln/08-conserved-elements-chr-fasta/chr1/80-40-dedup-241/ -m /n/holylfs05/LABS/informatics/Users/gthomas/phyloacc-workflows/data/01-zoonomia-aln/02-phylofit/241-mammalian-2020v2b-corrected.mod -o /n/holylfs05/LABS/informatics/Users/gthomas/phyloacc-workflows/data/02-phyloacc/chr1/ -t "fullTreeAnc167;fullTreeAnc125;fullTreeAnc149" -g "Dasypus_novemcinctus;Tolypeutes_matacus;Chaetophractus_vellerosus;Tamandua_tetradactyla;Myrmecophaga_tridactyla;Choloepus_didactylus;Choloepus_hoffmanni;Trichechus_manatus;Procavia_capensis;Heterohyrax_brucei;Loxodonta_africana;Microgale_talazaci;Echinops_telfairi;Chrysochloris_asiatica;Elephantulus_edwardii;Orycteropus_afer" -n 4 -batch 20 -j 20 -p 24 -part "holy-info,shared" -time 12 -mem 24 -st-path /n/home07/gthomas/projects/phyloacc/PhyloAcc/PhyloAcc-ST

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CONDA_PREFIX/lib/

ID_FILE /n/home07/gthomas/projects/phyloacc/PhyloAcc-test-data/phyloacc-st-id-test/phyloacc-job-files/ids/1-st.id

-------------------------

PHYTREE_FILE /n/holylfs05/LABS/informatics/Users/gthomas/phyloacc-workflows/data/01-zoonomia-aln/02-phylofit/241-mammalian-2020v2b-corrected.mod
SEG_FILE /n/holylfs05/LABS/informatics/Users/gthomas/phyloacc-workflows/data/02-phyloacc/chr1/phyloacc-job-files/bed/1-st.bed
ID_FILE /n/holylfs05/LABS/informatics/Users/gthomas/phyloacc-workflows/data/02-phyloacc/chr1/phyloacc-job-files/ids/1-st.id
ALIGN_FILE /n/holylfs05/LABS/informatics/Users/gthomas/phyloacc-workflows/data/02-phyloacc/chr1/phyloacc-job-files/alns/1-st.fa
RESULT_FOLDER /n/holylfs05/LABS/informatics/Users/gthomas/phyloacc-workflows/data/02-phyloacc/chr1/phyloacc-job-files/phyloacc-output/1-phyloacc-st-out
PREFIX 1
THIN 1
BURNIN 500
MCMC 1000
CHAIN 1
TARGETSPECIES fullTreeAnc167;fullTreeAnc125;fullTreeAnc149
OUTGROUP Dasypus_novemcinctus;Tolypeutes_matacus;Chaetophractus_vellerosus;Tamandua_tetradactyla;Myrmecophaga_tridactyla;Choloepus_didactylus;Choloepus_hoffmanni;Trichechus_manatus;Procavia_capensis;Heterohyrax_brucei;Loxodonta_africana;Microgale_talazaci;Echinops_telfairi;Chrysochloris_asiatica;Elephantulus_edwardii;Orycteropus_afer
CONSERVE Kogia_breviceps;Platanista_gangetica;Mesoplodon_bidens;Ziphius_cavirostris;Inia_geoffrensis;Lipotes_vexillifer;Neophocaena_asiaeorientalis;Phocoena_phocoena;Delphinapterus_leucas;Monodon_monoceros;Tursiops_truncatus;Orcinus_orca;Megaderma_lyra;Craseonycteris_thonglongyai;Hipposideros_armiger;Hipposideros_galeritus;Rhinolophus_sinicus;Noctilio_leporinus;Pteronotus_parnellii;Mormoops_blainvillei;Carollia_perspicillata;Artibeus_jamaicensis;Anoura_caudifer;Tonatia_saurophila;Micronycteris_hirsuta;Desmodus_rotundus;Pipistrellus_pipistrellus;Eptesicus_fuscus;Lasiurus_borealis;Murina_feae;Myotis_myotis;Myotis_brandtii;Myotis_lucifugus;Myotis_davidii;Miniopterus_natalensis;Miniopterus_schreibersii;Tadarida_brasiliensis;Nycticebus_coucang;Otolemur_garnettii;Daubentonia_madagascariensis;Propithecus_coquereli;Indri_indri;Cheirogaleus_medius;Microcebus_murinus;Mirza_coquereli;Lemur_catta;Eulemur_fulvus;Eulemur_flavifrons;Pithecia_pithecia;Callicebus_donacophilus;Saguinus_imperator;Callithrix_jacchus;Aotus_nancymaae;Saimiri_boliviensis;Cebus_albifrons;Cebus_capucinus;Alouatta_palliata;Ateles_geoffroyi;Mandrillus_leucophaeus;Cercocebus_atys;Papio_anubis;Macaca_mulatta;Macaca_fascicularis;Macaca_nemestrina;Erythrocebus_patas;Chlorocebus_sabaeus;Cercopithecus_neglectus;Rhinopithecus_roxellana;Rhinopithecus_bieti;Pygathrix_nemaeus;Nasalis_larvatus;Semnopithecus_entellus;Piliocolobus_tephrosceles;Colobus_angolensis;Nomascus_leucogenys;Gorilla_gorilla;Pan_troglodytes;Pan_paniscus;Homo_sapiens;Pongo_abelii;Galeopterus_variegatus;Tupaia_tana;Tupaia_chinensis;Oryctolagus_cuniculus;Lepus_americanus;Ochotona_princeps;Ctenodactylus_gundi;Petromus_typicus;Thryonomys_swinderianus;Heterocephalus_glaber;Fukomys_damarensis;Dolichotis_patagonum;Hydrochoerus_hydrochaeris;Cavia_tschudii;Cavia_porcellus;Cavia_aperea;Dasyprocta_punctata;Cuniculus_paca;Octodon_degus;Ctenomys_sociabilis;Myocastor_coypus;Capromys_pilorides;Chinchilla_lanigera;Dinomys_branickii;Hystrix_cristata;Rattus_norvegicus;Mus_musculus;Mus_spretus;Mus_caroli;Mus_pahari;Acomys_cahirinus;Meriones_unguiculatus;Psammomys_obesus;Mesocricetus_auratus;Cricetulus_griseus;Microtus_ochrogaster;Ondatra_zibethicus;Ellobius_talpinus;Ellobius_lutescens;Sigmodon_hispidus;Peromyscus_maniculatus;Onychomys_torridus;Cricetomys_gambianus;Nannospalax_galili;Jaculus_jaculus;Allactaga_bullata;Zapus_hudsonius;Perognathus_longimembris;Dipodomys_stephensi;Dipodomys_ordii;Castor_canadensis;Xerus_inauris;Spermophilus_dauricus;Ictidomys_tridecemlineatus;Marmota_marmota;Aplodontia_rufa;Muscardinus_avellanarius;Glis_glis;Graphiurus_murinus;Solenodon_paradoxus;Erinaceus_europaeus;Crocidura_indochinensis;Sorex_araneus;Uropsilus_gracilis;Condylura_cristata;Scalopus_aquaticus;Macroglossus_sobrinus;Eidolon_helvum;Pteropus_vampyrus;Pteropus_alecto;Rousettus_aegyptiacus;Vicugna_pacos;Camelus_dromedarius;Camelus_ferus;Camelus_bactrianus;Hippopotamus_amphibius;Eubalaena_japonica;Balaenoptera_bonaerensis;Balaenoptera_acutorostrata;Eschrichtius_robustus;Tragulus_javanicus;Moschus_moschiferus;Bubalus_bubalis;Bos_taurus;Bos_indicus;Bos_mutus;Bison_bison;Beatragus_hunteri;Ammotragus_lervia;Hemitragus_hylocrius;Capra_hircus;Capra_aegagrus;Ovis_aries;Ovis_canadensis;Pantholops_hodgsonii;Saiga_tatarica;Okapia_johnstoni;Giraffa_tippelskirchi;Antilocapra_americana;Odocoileus_virginianus;Rangifer_tarandus;Elaphurus_davidianus;Catagonus_wagneri;Sus_scrofa;Cryptoprocta_ferox;Mungos_mungo;Suricata_suricatta;Helogale_parvula;Hyaena_hyaena;Paradoxurus_hermaphroditus;Panthera_tigris;Panthera_pardus;Panthera_onca;Felis_catus;Felis_nigripes;Puma_concolor;Acinonyx_jubatus;Lycaon_pictus;Canis_lupus;Canis_lupus_familiaris;Vulpes_lagopus;Pteronura_brasiliensis;Enhydra_lutris;Mustela_putorius;Mellivora_capensis;Ailurus_fulgens;Spilogale_gracilis;Zalophus_californianus;Odobenus_rosmarus;Leptonychotes_weddellii;Mirounga_angustirostris;Neomonachus_schauinslandi;Ailuropoda_melanoleuca;Ursus_maritimus;Manis_javanica;Manis_pentadactyla;Equus_caballus;Equus_przewalskii;Equus_asinus;Tapirus_indicus;Tapirus_terrestris;Dicerorhinus_sumatrensis;Diceros_bicornis;Ceratotherium_simum;Ceratotherium_simum_cottoni
NUM_THREAD 12

-------------------------

/usr/bin/time phyloFit --tree /n/holylfs05/LABS/informatics/Users/gthomas/phyloacc-workflows/summary-data/241-mammalian-2020v2.phast-242.nh --subst-mod REV --out-root modelfile chr8.118.maf
Reading alignment from chr8.118.maf ...
Compacting sufficient statistics ...
Fitting tree model to chr8.118.maf using REV ...
numpar = 485
^CCommand terminated by signal 2
1035630.47user 1.93system 287:59:36elapsed 99%CPU (0avgtext+0avgdata 507144maxresident)k
500824inputs+0outputs (9major+4055747minor)pagefaults 0swaps

-------------------------

to prune:

Dasypus_novemcinctus
Tolypeutes_matacus
Chaetophractus_vellerosus
Tamandua_tetradactyla
Myrmecophaga_tridactyla
Choloepus_didactylus
Choloepus_hoffmanni
Trichechus_manatus
Procavia_capensis
Heterohyrax_brucei
Microgale_talazaci
Echinops_telfairi
Chrysochloris_asiatica
Elephantulus_edwardii
Orycteropus_afer
Equus_przewalskii
Equus_asinus
Tapirus_terrestris
Dicerorhinus_sumatrensis
Diceros_bicornis
Ceratotherium_simum
Ceratotherium_simum_cottoni
Cryptoprocta_ferox
Mungos_mungo
Suricata_suricatta
Helogale_parvula
Hyaena_hyaena
Paradoxurus_hermaphroditus
Panthera_pardus
Panthera_onca
Felis_nigripes
Puma_concolor
Acinonyx_jubatus
Lycaon_pictus
Canis_lupus
Vulpes_lagopus
Pteronura_brasiliensis
Enhydra_lutris
Mustela_putorius
Mellivora_capensis
Ailurus_fulgens
Spilogale_gracilis
Zalophus_californianus
Odobenus_rosmarus
Leptonychotes_weddellii
Mirounga_angustirostris
Neomonachus_schauinslandi
Ursus_maritimus
Manis_javanica
Manis_pentadactyla
Moschus_moschiferus
Bubalus_bubalis
Bos_indicus
Bos_mutus
Beatragus_hunteri
Ammotragus_lervia
Hemitragus_hylocrius
Capra_hircus
Capra_aegagrus
Ovis_canadensis
Pantholops_hodgsonii
Saiga_tatarica
Antilocapra_americana
Odocoileus_virginianus
Rangifer_tarandus
Elaphurus_davidianus
Nycticebus_coucang
Daubentonia_madagascariensis
Propithecus_coquereli
Indri_indri
Cheirogaleus_medius
Mirza_coquereli
Lemur_catta
Eulemur_fulvus
Eulemur_flavifrons
Pithecia_pithecia
Callicebus_donacophilus
Saguinus_imperator
Saimiri_boliviensis
Cebus_albifrons
Cebus_capucinus
Alouatta_palliata
Ateles_geoffroyi
Mandrillus_leucophaeus
Cercocebus_atys
Macaca_fascicularis
Macaca_nemestrina
Erythrocebus_patas
Cercopithecus_neglectus
Rhinopithecus_roxellana
Rhinopithecus_bieti
Pygathrix_nemaeus
Nasalis_larvatus
Semnopithecus_entellus
Piliocolobus_tephrosceles
Colobus_angolensis
Homo_sapiens
Pongo_abelii
Galeopterus_variegatus
Tupaia_tana
Tupaia_chinensis
Ochotona_princeps
Ctenodactylus_gundi
Petromus_typicus
Thryonomys_swinderianus
Heterocephalus_glaber
Fukomys_damarensis
Dolichotis_patagonum
Hydrochoerus_hydrochaeris
Cavia_tschudii
Cavia_porcellus
Cavia_aperea
Dasyprocta_punctata
Cuniculus_paca
Octodon_degus
Ctenomys_sociabilis
Myocastor_coypus
Capromys_pilorides
Dinomys_branickii
Hystrix_cristata
Mus_spretus
Mus_caroli
Mus_pahari
Acomys_cahirinus
Meriones_unguiculatus
Psammomys_obesus
Microtus_ochrogaster
Ondatra_zibethicus
Ellobius_talpinus
Ellobius_lutescens
Sigmodon_hispidus
Onychomys_torridus
Nannospalax_galili
Allactaga_bullata
Zapus_hudsonius
Perognathus_longimembris
Dipodomys_stephensi
Dipodomys_ordii
Castor_canadensis
Xerus_inauris
Spermophilus_dauricus
Marmota_marmota
Muscardinus_avellanarius
Glis_glis



--------------------------------------------------

sed -i 's/^/STRING_TO_ADD/' FILENAME
sed -i '/^[^XYMT]/s/^/STRING_TO_ADD/' FILENAME




sort -n -k1 FILENAME






awk -F, '{count[$1]++} END {for (i in count) print i "," count[i]}' FILENAME > temp && mv temp FILENAME








/usr/bin/time bigWigToWig ../241-mammalian-2020v2.bigWig /dev/stdout | grep -v "^#" | awk -v OFS="\t" '{ if ($4 > 0) print $0, "0", 10^-$4; else if ($4 < 0) print $0, "2", 10^$4; else print $0, "1", 10^$4 }' > 241-mammalian-2020v2b.phylop-scores.tsv
# Convert bigwig to wig and add new columns with the conservation status, raw p-value
# HEADERS:
# 1. chromosome
# 2. start position
# 3. end position
# 4. raw score/log(raw p-value)
# 5. conservation status (0 = conserved, 1 = neutral, 2 = accelerated)
# 6. raw p-value
# 945.29user 22.20system 45:11.77elapsed 35%CPU (0avgtext+0avgdata 1238900maxresident)k
# 19289288inputs+0outputs (0major+29267minor)pagefaults 0swaps

time -p total=$(wc -l 241-mammalian-2020v2b.phylop-scores.tsv | cut -d ' ' -f1)
# Get the total number of sites (/tests performed)
# 2852623265
# real 32.34
# user 18.51
# sys 13.76

#/usr/bin/time sort -k6,6g --parallel=4 -T $(pwd) 241-mammalian-2020v2b.phylop-scores.tsv | awk -v OFS="\t" '{ print $0, NR }' | awk -v OFS="\t" -v total="${total}" '{ print $0, ($7 / total)*0.05 }' > 241-mammalian-2020v2b.phylop-scores.qvals.tsv
# Sort by p-value and add column for row number and calculate q-value in another column
# Uses 0.05 alpha critical value

#sort -k6,6g --parallel=4 -T $(pwd) test.tsv | awk -v OFS="\t" '{ print $0, NR }' | sort -rn -k7 --parallel=4 -T $(pwd) | awk -v OFS="\t" -v total=${total2} 'BEGIN{prev_pn=999} {p_adj=total/$7*$6; if(p_adj>prev_pn){p_adj=prev_pn}; prev_pn=p_adj; if(p_adj>1){p_adj=1}; print $0, p_adj}' | sort -k 1,1 -k2,2n | cut -f 1,2,3,5,8 > test2-out.tsv

/usr/bin/time sort -k6,6g --parallel=12 -T $(pwd) 241-mammalian-2020v2b.phylop-scores.tsv | awk -v OFS="\t" '{ print $0, NR }' | sort -rn -k7 --parallel=12 -T $(pwd) | awk -v OFS="\t" -v total=${total} 'BEGIN{prev_pn=999} {p_adj=(total/$7)*$6; if(p_adj>prev_pn){p_adj=prev_pn}; prev_pn=p_adj; if(p_adj>1){p_adj=1}; sig=0; if(p_adj<0.05){sig=1}; print $0, p_adj, sig}' | sort -k 1,1 -k2,2n --parallel=12 -T $(pwd) | cut -f 1,2,3,5,8,9 > 241-mammalian-2020v2b.phylop-scores.fdr-adj.tsv
# Adjust the raw phylop p-values for multiple testing using the Benjamini-Hochberg method
# STEPS:
# 1. Sort by p-value in ascending order
# 2. Add a column with the row number as the rank of that p-value
# 3. Sort by p-value in descending order so it is easy to check the adjusted p-value of the next highest raw p-value as per the BH method
# 4. Calculate the adjusted p-value using the formula: p_adj = (total number of tests / rank of p-value) * raw p-value
#       If the adjusted p-value is greater than the previous adjusted p-value, set the adjusted p-value to the previous adjusted p-value
#       If the adjusted p-value is greater than 1, set the adjusted p-value to 1
#       Add a column with the adjusted p-value
#       Add a column with the significance status (0 = not significant, 1 = significant)
# 9. Sort by chromosome and then by position numerically
# 10. Remove the row number and raw p-value columns
# 11. Write the output to a new file
# HEADERS:
# 1. chromosome
# 2. start position
# 3. end position
# 4. conservation status (0 = conserved, 1 = neutral, 2 = accelerated)
# 5. adjusted p-value
# 6. significant (0 = not significant, 1 = significant)
## Took a couple of days because I forgot the parallel option on the last sort

/usr/bin/time awk -v OFS='\t' '$4=="0" && $6=="1"{print $1, $2, $3, $4$6}' 241-mammalian-2020v2b.phylop-scores.fdr-adj.tsv > 241-mammalian-2020v2b.phylop-scores.fdr-adj.conserved.tsv
# Get only the sites that are conserved and significant and combine the conserved and significant columns into one column (they should all be 01)
# HEADERS:
# 1. chromosome
# 2. start position
# 3. end position
# 4. combined state and significance codes
# 747.86user 19.15system 12:48.12elapsed 99%CPU (0avgtext+0avgdata 9120maxresident)k
# 385024inputs+4237480outputs (0major+750minor)pagefaults 0swaps
# 80565993 sites conserved and significant

/usr/bin/time bedGraphPack 241-mammalian-2020v2b.phylop-scores.fdr-adj.conserved.tsv 241-mammalian-2020v2b.phylop-scores.fdr-adj.conserved.bed
# Convert the conserved and significant sites to a bed file
# 18.91user 1.53system 0:20.52elapsed 99%CPU (0avgtext+0avgdata 5632maxresident)k
# 0inputs+2296504outputs (0major+303minor)pagefaults 0swaps
# 43653297 regions conserved and significant

#######
# Convert a bigWig file to a wig file, filter out comments, and add a new column with the conservation status and score
bigWigToWig 241-mammalian-2020v2.bigWig /dev/stdout | grep -v "^#" | awk -v OFS="\t" '{ if ($4 > 0) print $0, "0", 10^-$4; else if ($4 < 0) print $0, "2", 10^$4; else print $0, "1", 10^$4 }' > 241-mammalian-2020v2.phylop-scores.tsv


# this will take a while to run!
total=`cat 241-mammalian-2020v2.parse.txt | wc -l` && 

cat 241-mammalian-2020v2.parse.txt | # read the contents of the file
sort -k6,6g --parallel=4 -T $(pwd) | # sort the contents by the 6th column in parallel using 4 threads and temporary files in the current directory
awk -v OFS="\t" '{ print $0, NR }' | # add a new column with the row number to the output using tab as the separator
awk -v OFS="\t" -v total="${total}" '{ print $0, ($7 / total)*0.05 }' | # add a new column with the FDR value to the output using tab as the separator
awk -v OFS="\t" '{ if ($6 < $8) print $0, "TRUE"; else print $0, "FALSE" }' > 241-mammalian-2020v2.parse.fdr.txt # add a new column with the FDR status to the output using tab as the separator and write the output to a new file


cat 241-mammalian-2020v2.parse.fdr.txt | # read the contents of the file
awk '{ if ($9 == "TRUE") print $0 }' | # filter the rows where the 9th column is "TRUE"
tail -n 1 | # get the last row of the filtered output
awk '{ print $6 }' # print the 6th column of the last row



cat 241-mammalian-2020v2.parse.fdr.txt | # read the contents of the file
awk '{ if ($6 <= 0.00229615) print $0 }' | # filter the rows where the 6th column is less than or equal to 0.00229615
sort -k1,1 -k2,2n --parallel=4 -T $(pwd) > 241-mammalian-2020v2.parse.fdr.significant.txt # sort the filtered output by the 1st column and then by the 2nd column numerically and write the output to a new file



set.seed(123) # set seed for reproducibility
p_values <- runif(10) # generate 10 random p-values between 0 and 1
p_values # print the p-values


# create a vector of numbers
numbers <- c(5, 2, 9, 1, 7)

# sort the vector in ascending order
sorted_numbers <- sort(numbers)

# print the sorted vector
print(sorted_numbers)



i <- lp:1L

pmin(1, cummin(n/i * p[o]))[ro]


# create a vector of p-values
p_values <- c(0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.10)

# sort the p-values in ascending order
sorted_p_values <- sort(p_values)

# calculate the number of tests
m <- length(p_values)

# initialize the q-values vector
q_values <- rep(0, m)

# calculate the FDR for each p-value
for (i in 1:m) {
    q_values[i] <- min(sorted_p_values[i:m] * m / (i:m))
}

# adjust the q-values to be monotonically increasing
for (i in (m - 1):1) {
    q_values[i] <- min(q_values[i], q_values[i + 1])
}

# print the q-values
print(q_values)







# create a vector of p-values
p_values <- c(0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.10)

# sort the p-values in ascending order
sorted_p_values <- sort(p_values)

# calculate the number of tests
m <- length(p_values)

# initialize the q-values vector
q_values <- rep(0, m)

# initialize the previous q-value
prev_q_value <- 0

# loop through each p-value and calculate the FDR
for (i in 1:m) {
    curr_q_value <- min(sorted_p_values[i:m] * m / (i:m))
    q_values[i] <- max(prev_q_value, curr_q_value)
    prev_q_value <- q_values[i]
}

# print the q-values
print(q_values)






#!/bin/bash

# Read the input file and extract the p-values column
p_values=$(awk '{print $1}' "$1")

# Sort the p-values in ascending order
sorted_p_values=$(echo "$p_values" | sort -n)

# Calculate the number of tests
m=$(echo "$sorted_p_values" | wc -l)

# Initialize the q-values vector
q_values=()

# Initialize the previous q-value
prev_q_value=0

# Loop through each p-value and calculate the FDR
for ((i=1; i<=m; i++)); do
    curr_p_value=$(echo "$sorted_p_values" | sed -n "${i}p")
    curr_q_value=$(echo "scale=10; $curr_p_value * $m / $i" | bc)
    q_values+=($(echo "scale=10; $(echo "${prev_q_value:-0} $curr_q_value" | awk '{print $1 > $2 ? $1 : $2}')" | bc))
    prev_q_value=${q_values[-1]}
done

# Print the q-values
printf '%s\n' "${q_values[@]}"





awk '{print $1}' input_file.txt | sort -n | awk 'BEGIN {m=0} {m++; if ($1<=m/NR*q) print $1, "significant"; else print $1, "not significant"}' q=0.05


awk '{a[NR]=$1} END {PROCINFO["sorted_in"]="@val_num_asc"; for (i=1;i<=NR;i++) {p=a[i]; q=p*NR/i; if (q>1) q=1; for (j=i+1;j<=NR;j++) {if (a[j]<=p) {fdr=q*NR/(j-1); if (fdr<q) q=fdr;}}; print p,q}}' input_file.txt



sort -rn -k 2 input.txt


ln -s /path/to/original/file /path/to/link

awk '/Exercise/,/`/' data4/Biotips-workshop-2023-Day2-student.Rmd




TATTCA
123456
0123456
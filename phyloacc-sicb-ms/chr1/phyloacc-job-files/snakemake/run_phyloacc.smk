#############################################################################
# Pipeline for running phyloacc batches
# Generated from: /n/home07/gthomas/projects/phyloacc/PhyloAcc/src/PhyloAcc-interface/phyloacc.py -d /n/holylfs05/LABS/informatics/Users/gthomas/phyloacc-workflows/data/01-zoonomia-aln/08-conserved-elements-chr-fasta/chr1/80-40-dedup-241/ -m /n/holylfs05/LABS/informatics/Users/gthomas/phyloacc-workflows/data/01-zoonomia-aln/02-phylofit/241-mammalian-2020v2b-corrected.mod -o /n/holylfs05/LABS/informatics/Users/gthomas/phyloacc-workflows/data/02-phyloacc/chr1/ -t fullTreeAnc167;fullTreeAnc125;fullTreeAnc149 -g Dasypus_novemcinctus;Tolypeutes_matacus;Chaetophractus_vellerosus;Tamandua_tetradactyla;Myrmecophaga_tridactyla;Choloepus_didactylus;Choloepus_hoffmanni;Trichechus_manatus;Procavia_capensis;Heterohyrax_brucei;Loxodonta_africana;Microgale_talazaci;Echinops_telfairi;Chrysochloris_asiatica;Elephantulus_edwardii;Orycteropus_afer -n 4 -batch 20 -j 20 -p 12 -part holy-info,shared -time 12 --overwrite
# On: 01.10.2024 | 15:17:04
#############################################################################

#############################################################################

import os 

#############################################################################

IQTREEDIR = config["iqtree_directory"];
ASTRALDIR = config["astral_directory"];

INDIR = config["input_directory"];
OUTDIR = config["output_directory"];
ST_BATCHES = config["st_batch_list"];
GT_BATCHES = config["gt_batch_list"];
# Inputs for the snakemake pipeline are read from the config file generated by
# the interface

#############################################################################

iqtree_loci = [];
#iqtree_loci = [ f.replace(".fa", "") for f in os.listdir(os.path.join(IQTREEDIR, "alns")) if f.endswith(".fa") ];
# Reads the alignments to make trees from if --theta is specified

#############################################################################
# Final rule - rule that depends on final expected output file and initiates all
# the other rules

localrules: all

rule all:
    input:
        #expand(os.path.join(IQTREEDIR, "gene-trees", "{locus}", "{locus}.treefile"), locus=iqtree_loci),
        #os.path.join(IQTREEDIR, "gene-trees", "all-gene-trees.treefile"),
        #"False",
        expand(os.path.join(OUTDIR, "{st_batch}-phyloacc-st-out", "{st_batch}_elem_lik.txt"), st_batch=ST_BATCHES),
        expand(os.path.join(OUTDIR, "{gt_batch}-phyloacc-gt-out", "{gt_batch}_elem_lik.txt"), gt_batch=GT_BATCHES)
# This rule checks for expected outputs from the rules
# With --theta, a coalescent tree will be estimated with IQTree and ASTRAL, but without --theta these outputs
# are commented and those rules will not be run.

#############################################################################
# Pipeline rules

rule run_iqtree:
    input:
        os.path.join(IQTREEDIR, "alns", "{locus}.fa")
    output:
       os.path.join(IQTREEDIR, "gene-trees", "{locus}", "{locus}.treefile")
    params:
        locus=os.path.abspath(os.path.join(IQTREEDIR, "gene-trees", "{locus}", "{locus}"))
    log:
        os.path.join(IQTREEDIR, "gene-trees", "{locus}", "{locus}.log")
    resources:
        cpus=1    
    shell:
        """
        iqtree -s {input} --prefix {params.locus} -T {resources.cpus} -redo &> {log}
        """    

rule combine_gene_trees:
    input:
        gene_trees = expand(os.path.join(IQTREEDIR, "gene-trees", "{locus}", "{locus}.treefile"), locus=iqtree_loci),
        gene_tree_dir = os.path.join(IQTREEDIR, "gene-trees")
    output:
        os.path.join(IQTREEDIR, "gene-trees", "all-gene-trees.treefile")
    shell:
        """
        cat {input.gene_tree_dir}/*/*.treefile > {output}
        """

rule run_astral:
    input:
        gene_trees = os.path.join(IQTREEDIR, "gene-trees", "all-gene-trees.treefile"),
        species_tree = os.path.join(ASTRALDIR, "input-species-tree.treefile")
    output:
        "False"
    log:
        os.path.join(ASTRALDIR, "astral-species-tree.log")
    shell:
        """
        java -jar astral.jar -q {input.species_tree} -i {input.gene_trees} -o {output} &> {log}
        """

# The above rules estimate a tree with branch lengths in coalescent units if the --theta option
# is used. Without --theta, the expected outputs from these in rule all are commented out and they will not be run.
####################

rule run_phyloacc:
    input:
        os.path.join(INDIR, "{st_batch}-st.cfg")
    output:
        os.path.join(OUTDIR, "{st_batch}-phyloacc-st-out", "{st_batch}_elem_lik.txt")
    log:
        os.path.join(OUTDIR, "{st_batch}-phyloacc-st-out", "{st_batch}-phyloacc.log")
    shell:
        """
        PhyloAcc-ST {input} &> {log}
        """
        
rule run_phyloacc_gt:
    input:
        config = os.path.join(INDIR, "{gt_batch}-gt.cfg"),
        coal_tree = "False"
    output:
        os.path.join(OUTDIR, "{gt_batch}-phyloacc-gt-out", "{gt_batch}_elem_lik.txt")
    log:
        os.path.join(OUTDIR, "{gt_batch}-phyloacc-gt-out", "{gt_batch}-phyloacc.log")
    shell:
        """
        PhyloAcc-GT {input.config} &> {log}
        """

# This rule runs phyloacc on each batch individually. With a cluster profile
# each batch will be submitted as a job.

#############################################################################
